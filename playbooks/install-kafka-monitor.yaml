#Vincent Nambatac


- hosts: manager
  become: true
  become_method: sudo
  gather_facts: False
  tasks:

  - name: Set timezone to Asia/Manila
    community.general.timezone:
      name: Asia/Manila



- hosts: manager
  become: true
  become_user: root
  gather_facts: False
  vars_files:
    - vars/settings.yaml
  tasks:

  - name: Create group "{{ kafka_monitor_user }}"
    group:
      name: "{{ kafka_monitor_user }}"
      state: present

  - name: Create user '{{ kafka_monitor_user }}'
    user:
      name: "{{ kafka_monitor_user }}"
      password: NOT_LOGGING_PASSWORD
      group: "{{ kafka_monitor_user }}"

  - name: "Create data folder for CMAK {{ kafka_monitor_cmak_dir }}"
    file:
      path: "{{ kafka_monitor_cmak_dir }}"
      state: directory
      mode: 0755
      group: "{{ kafka_monitor_user }}"
      owner: "{{ kafka_monitor_user }}"

  - name: "Create directory for cmak-3.0.0.5.zip package {{ kafka_monitor_cmak_package_folder }}"
    file:
      path: "{{ kafka_monitor_cmak_package_folder }}"
      state: directory
      mode: 0755
      group: "{{ kafka_monitor_user }}"
      owner: "{{ kafka_monitor_user }}"

  - name: "clone repository for cmak to {{ kafka_monitor_cmak_dir }}"
    become: true
    git:
      repo: https://github.com/yahoo/CMAK.git
      dest: "{{ kafka_monitor_cmak_dir }}"
      clone: yes
      force: yes

  - name: Update ubuntu package
    command: apt update

  - name: 'Install JVM: {{ jvm_package }}'
    apt:
      name: openjdk-11-jdk
      state: latest

  - name: Change user and group for 
    command: chown -R monitor:monitor {{ kafka_monitor_cmak_dir }}
    become: true


# Install sbt for future sbt compiling
  - name: Install sbt 
    shell: |
      echo "deb https://repo.scala-sbt.org/scalasbt/debian all main" | sudo tee /etc/apt/sources.list.d/sbt.list
      echo "deb https://repo.scala-sbt.org/scalasbt/debian /" | sudo tee /etc/apt/sources.list.d/sbt_old.list
      curl -sL "https://keyserver.ubuntu.com/pks/lookup?op=get&search=0x2EE0EA64E40A89B84B2DF73499E82A75642AC823" | sudo apt-key add
      sudo apt-get update
      sudo apt-get install sbt
    become: True


  - name: Install Maven
    apt:
      name: maven
      state: latest

# Note replace the directory source where cmak-3.0.0.5.zip located
  - name: "Copy cmak package to {{ kafka_monitor_cmak_package_folder }} kafka monitor server"
    copy: src=/home/sysopscdo2/kafka-ansible/cmak/cmak-3.0.0.5.zip dest={{ kafka_monitor_cmak_package_folder }}


  - name: Install unzip
    shell: |
      sudo apt-get install unzip -y
    become: True

  - name: Unzip cmak-3.0.0.5.zip package 
    shell: |
      cd {{ kafka_monitor_cmak_package_folder }} && unzip {{ kafka_cmak_package_name }}

  - name: Removing {{ kafka_monitor_cmak_package_folder }}/{{ kafka_cmak_package_name }}
    file:
      path: "{{ kafka_monitor_cmak_package_folder }}/{{ kafka_cmak_package_name }}"
      state: absent
    become: yes

  - name: "Create data folder for node exporter to {{ kafka_monitor_node_exporter }}"
    file:
      path: "{{ kafka_monitor_node_exporter }}"
      state: directory
      mode: 0755
      group: "{{ kafka_monitor_user }}"
      owner: "{{ kafka_monitor_user }}"



  - name: "Install node_exporter to cmak cluster"
    get_url:
      url="https://github.com/prometheus/node_exporter/releases/download/v1.1.2/node_exporter-1.1.2.linux-amd64.tar.gz"
      dest={{ kafka_monitor_node_exporter }}

  - name: "Unzip node_exporter-1.1.2.linux-amd64.tar.gz to {{ kafka_monitor_node_exporter }}"
    unarchive:
      src: "{{ zookeeper_node_exporter }}/node_exporter-1.1.2.linux-amd64.tar.gz"
      dest: "{{ kafka_monitor_node_exporter }}"
      remote_src: yes
      list_files: yes

  - name: "Remove package node_exporter-1.1.2.linux-amd64.tar.gz from {{ kafka_monitor_node_exporter }}"
    file:
      path: "{{ kafka_monitor_node_exporter }}/node_exporter-1.1.2.linux-amd64.tar.gz"
      state: absent

  - name: " Move node_exporter-1.1.2.linux-amd64 content to /opt/node_exporter directory"
    shell: |
      cd /opt/node_exporter && mv node_exporter-1.1.2.linux-amd64/* /opt/node_exporter
      rm -r /opt/node_exporter/node_exporter-1.1.2.linux-amd64


  - name: Create cmak.service 
    template:
      src: templates/cmak.j2
      dest: /etc/systemd/system/cmak.service
      mode: 0755

  - name: Update application conf for zookeeper connect
    template:
      src: templates/application.conf
      dest: "{{ kafka_monitor_cmak_package_folder }}/cmak-3.0.0.5/conf/application.conf"

  - set_fact:
      cmak_zkhost: "{{ groups.zookeeper | join(':{{ zookeeper_port }},') }}:{{ zookeeper_port }}"
      rendered_template: "{{ lookup('template', 'templates/application.conf') }}"

  - name: Set zookeeper hosts in application.conf
    replace:
      path: "{{ kafka_monitor_cmak_package_folder }}/cmak-3.0.0.5/conf/application.conf"
      regexp: 'cmak.zkhosts=localhost:2181'
      replace: "cmak.zkhosts={{ cmak_zkhost }}"

  - name: Create node_exporter.service for monitor cluster
    template:
      src: templates/kafka_monitor_node_exporter.j2
      dest: /etc/systemd/system/node_exporter.service
      mode: 0755

  - name: reload systemd
    systemd:
      daemon_reload: yes

  - name: Change owner for /opt/cmak
    shell: |
      chown -R monitor:monitor /opt/cmak/*
    become: True

  - name: Chagne owner for /opt/CMAK
    shell: |
      chown -R monitor:monitor /opt/CMAK/*

  - name: Set monitor:monitor as sudoer
    shell: |
      usermod -aG sudo monitor
    become: True

  - name: enable service cmak.service and ensure it is not masked
    systemd:
      name: cmak.service
      enabled: yes
      masked: no


  - name: enable service node_exporter.service and ensure it is not masked
    systemd:
      name: node_exporter.service
      enabled: yes
      masked: no


  - name: Start CMAK
    service:
      name: cmak.service
      state: restarted

  - name: Start node_exporter.service
    service:
      name: node_exporter.service
      state: restarted

#KAFDROP

  - name: "Create directory for Kafdrop to {{ kafka_monitor_kafdrop_dir }}"
    file:
      path: "{{ kafka_monitor_kafdrop_dir }}"
      state: directory
      mode: 0755
      group: "{{ kafka_monitor_user }}"
      owner: "{{ kafka_monitor_user }}"

  - name: Clone Kafkdrop repository
    git:
      repo: https://github.com/obsidiandynamics/kafdrop.git
      dest: "{{ kafka_monitor_kafdrop_dir }}"
      clone: yes
      force: yes

  - name: Compile maven dependencies
    shell: |
      cd /opt/kafdrop && mvn clean package
    become: True

  - name: Create kafdrop service
    template:
      src: templates/kafdrop.j2
      dest: /etc/systemd/system/kafdrop.service
      mode: 0755

  - name: enable service kafdrop.service and ensure it is not masked
      name: kafdrop.service
      enabled: yes
      masked: no

  - name: Start kafdrop
      name: kafdrop.service
      state: restarted
    become: yes

#Cruise-Control

  - name: Create installation folder for cruise control
    file:
      path: "{{ kafka_cruise_control_folder }}"
      state: directory
      mode: 0755
      group: "{{ kafka_monitor_user }}"
      owner: "{{ kafka_monitor_user }}"

  - name: Install cruise control to monitor server
    get_url:
      url="https://github.com/linkedin/cruise-control/archive/refs/heads/migrate_to_kafka_2_5.zip"
      dest={{ kafka_cruise_control_folder }}

  - name: "Unzip cruise-control-migrate_to_kafka_2_5.zip to {{ kafka_cruise_control_folder }}"
    unarchive:
      src: "{{ kafka_cruise_control_folder }}/cruise-control-migrate_to_kafka_2_5.zip"
      dest: "{{ kafka_cruise_control_folder }}"
      remote_src: yes
      list_files: yes

  - name: "Removing cruise-control-migrate_to_kafka_2_5.zip to {{ kafka_cruise_control_folder }}"
    file:
      path: "{{ kafka_cruise_control_folder }}/cruise-control-migrate_to_kafka_2_5.zip"
      state: absent

  - name: move cruise-control-migrate_to_kafka_2_5 to /opt/cruise-control
    shell: |
      cd /opt/cruise-control && mv cruise-control-migrate_to_kafka_2_5/* /opt/cruise-control
      rm -r /opt/cruise-control/cruise-control-migrate_to_kafka_2_5

  - name: Install cruise-control-ui to kafka brokers
    get_url:
      url="https://github.com/linkedin/cruise-control-ui/releases/download/v0.3.4/cruise-control-ui-0.3.4.tar.gz"
      dest={{ kafka_cruise_control_folder }}

  - name: "Untar cruise-control-ui-0.3.4.tar.gz to {{ kafka_cruise_control_folder }}"
    unarchive:
      src: "{{ kafka_cruise_control_folder }}/cruise-control-ui-0.3.4.tar.gz"
      dest: "{{ kafka_cruise_control_folder }}"
      remote_src: yes
      list_files: yes

  - name: "Removing cruise-control-ui-0.3.4.tar.gz to {{ kafka_cruise_control_folder }}"
    file:
      path: "{{ kafka_cruise_control_folder }}/cruise-control-ui-0.3.4.tar.gz"
      state: absent

  - name: Compile cruise-control
    shell: |
      cd {{ kafka_cruise_control_folder }} && git init
      cd {{ kafka_cruise_control_folder }} && ./gradlew jar

  - name: "Copy cruise-control metrics reporter to kafka brokers lib to /opt/kafka/libs"
    synchronize:
      mode: push
      src: /opt/cruise-control/cruise-control-metrics-reporter/build/libs/cruise-control-metrics-reporter-0.1.0-SNAPSHOT.jar
      dest: /opt/kafka/libs
    delegate_to: kafka
    register: sync_file
    run_once: true
    with_items:
      - "/tmp/cruise-control-metrics-reporter-0.1.0-SNAPSHOT.jar"


  - name: Update cruisecontrol.properties
    template:
      src: templates/cruisecontrol.properties
      dest: /opt/cruise-control/config/cruisecontrol.properties

  - name: Create capacity.json file
    file:
      state: touch
      path: /opt/cruise-control/capacity.json

  - name: Compile dependant libs
    shell: |
      cd /opt/cruise-control && ./gradlew jar copyDependantLibs

  - name: Create Service for cruise-control to /etc/systemd/system/cruise-control.service
    template:
      src: templates/cruise-control.service
      dest: /etc/systemd/system/cruise-control.service

