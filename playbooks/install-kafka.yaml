# PREPARE Kafka environments and dependencies

- hosts: kafka
  become: true
  become_method: sudo
  gather_facts: False 
  vars_files:
    - vars/settings.yaml

  tasks:
  - name: Update ubuntu package
    command: apt update

  - name: 'Install JVM: {{ jvm_package }}'
    apt:
      name: openjdk-11-jdk
      state: latest

  - name: Create group "{{ kafka_user }}" 
    group:
      name: "{{ kafka_user }}"
      state: present

  - name: Create user '{{ kafka_user }}'
    user:
      name: "{{ kafka_user }}"
      password: "{{ 'kafka@pass' | password_hash('sha512','A512') }}"
      group: "{{ kafka_user }}"

  - name: sudo without password for kafka group
    lineinfile:
      dest: /etc/sudoers
      state: present
      regexp: '^%{{ kafka_user }}'
      line: '{{ kafka_user }}	ALL=(ALL:ALL) ALL'
      validate: 'visudo -cf %s'

  - name: add kafka:kafka to list of sudoers
    shell: |
      usermod -aG sudo kafka


  - name: "Create installation folder {{ kafka_install_package_host_folder }}"
    file:
      path: "{{ kafka_install_package_host_folder }}"
      state: directory
      mode: 0755
      group: "{{ kafka_user }}"
      owner: "{{ kafka_user }}" 

  - name: Copy kafka package to remote server
    copy: src={{kafka_install_package_source_folder}}/{{ kafka_install_package_name }} dest={{ kafka_install_package_host_folder }} mode=0777
    become: yes

  - name: Unzip kafka package "{{ kafka_install_package_host_folder }}/{{ kafka_install_package_name }}"
    unarchive:
      src: /opt/redhat/kafka_2.13-2.8.0.tgz
      dest: /opt/redhat
      remote_src: yes
      list_files: yes
    register: unarchived_list

  - name: Removing {{ kafka_install_package_host_folder }}/{{ kafka_install_package_name }}
    file:
      path: "{{ kafka_install_package_host_folder }}/{{ kafka_install_package_name }}"
      state: absent      
    become: yes

  - name: Create symbolic link {{ kafka_install_host_symlink }} for {{kafka_install_package_host_folder}}/kafka_2.13-2.8.0
    file:
      src: "{{kafka_install_package_host_folder}}/kafka_2.13-2.8.0"
      dest: "/opt/kafka"
      state: link 

  - name: Change user and group for symblink {{ kafka_install_host_symlink }}
    command: chown -R kafka:kafka {{ kafka_install_host_symlink }}
    become: true 

  - name: Set KAFKA_HOME={{ kafka_install_host_symlink }} in  /home/{{ kafka_user }}/.bashrc
    ansible.builtin.lineinfile: 
      dest: /home/{{ kafka_user }}/.bashrc
      line: "export KAFKA_HOME={{ kafka_install_host_symlink }}"
  - name: Set JAVA_HOME={{ kafka_user }} in /home/{{ kafka_user }}/.bashrc
    lineinfile:
      dest: /home/{{ kafka_user }}/.bashrc
      line: "export JAVA_HOME=/usr/lib/jvm/java-1.11.0-openjdk-amd64/"

  - name: source bashrc
    action: shell . /home/{{ kafka_user }}/.bashrc && ls -ltr
    become: true

##  SET KAFKA BROKERS     

- hosts: kafka  
  vars_files:
     - vars/settings.yaml

  tasks: 

  - name: "Create data folder for kafka {{ kafka_log_dirs }}"
    file:
      path: "{{ kafka_log_dirs }}"
      state: directory
      mode: 0755
      group: "{{ kafka_user }}"
      owner: "{{ kafka_user }}"       

  - name: Create file {{ kafka_install_host_symlink }}/config/server.properties
    template:
      src: templates/server-properties.j2
      dest: "{{ kafka_install_host_symlink }}/config/server.properties"         
      mode: 0644

  - set_fact: 
      zookeeper_connect: "{{ groups.zookeeper | join(':{{ zookeeper_port }},') }}:{{ zookeeper_port }}"
      rendered_template: "{{ lookup('template', 'templates/server-properties.j2') }}"

  - name: Set zookeeper hosts in server.properties
    replace:
      path: "{{ kafka_install_host_symlink }}/config/server.properties"
      regexp: 'zookeeper.connect=localhost:2181'
      replace: "zookeeper.connect={{ zookeeper_connect }}/apollo-kafka2"

  - name: Create installation folder for cruise control
    file:
      path: "{{ kafka_cruise_control_folder }}"
      state: directory
      mode: 0755
      group: "{{ kafka_user }}"
      owner: "{{ kafka_user }}"

  - name: Install cruise control to kafka brokers
    get_url:
      url="https://github.com/linkedin/cruise-control/archive/refs/heads/migrate_to_kafka_2_5.zip"
      dest={{ kafka_cruise_control_folder }}

  - name: "Unzip cruise-control-migrate_to_kafka_2_5.zip to {{ kafka_cruise_control_folder }}"
    unarchive:
      src: "{{ kafka_cruise_control_folder }}/cruise-control-migrate_to_kafka_2_5.zip"
      dest: "{{ kafka_cruise_control_folder }}"
      remote_src: yes
      list_files: yes

  - name: "Removing migrate_to_kafka_2_5.zip to {{ kafka_cruise_control_folder }}"
    file:
      path: "{{ kafka_cruise_control_folder }}/cruise-control-migrate_to_kafka_2_5.zip"
      state: absent

  - name: move cruise-control-migrate_to_kafka_2_5 to /opt/cruise-control
    shell: |
      cd /opt/cruise-control && mv cruise-control-migrate_to_kafka_2_5/* /opt/cruise-control
      rm -r /opt/cruise-control/cruise-control-migrate_to_kafka_2_5

  - name: Install cruise-control-ui to kafka brokers
    get_url:
      url="https://github.com/linkedin/cruise-control-ui/releases/download/v0.3.4/cruise-control-ui-0.3.4.tar.gz"
      dest={{ kafka_cruise_control_folder }}

  - name: "Untar to {{ kafka_cruise_control_folder }}"
    unarchive:
      src: "{{ kafka_cruise_control_folder }}/cruise-control-ui-0.3.4.tar.gz"
      dest: "{{ kafka_cruise_control_folder }}"
      remote_src: yes
      list_files: yes

  - name: "Removing cruise-control-ui-0.3.4.tar.gz to {{ kafka_cruise_control_folder }}"
    file:
      path: "{{ kafka_cruise_control_folder }}/cruise-control-ui-0.3.4.tar.gz"
      state: absent

  - name: Compile cruise-control
    shell: |
      cd {{ kafka_cruise_control_folder }} && git init
      cd {{ kafka_cruise_control_folder }} && ./gradlew jar


  - name: "Copy cruise-control metrics reporter to kafka brokers lib to /opt/kafka/libs"
    shell: |
      cp -R {{ kafka_cruise_control_folder }}/cruise-control-metrics-reporter/build/libs/cruise-control-metrics-reporter-0.1.0-SNAPSHOT.jar /opt/kafka/libs
    
  - name: Update cruisecontrol.properties
    template:
      src: templates/cruisecontrol.properties
      dest: /opt/cruise-control/config/cruisecontrol.properties

  - name: Create capacity.json file
    file:
      state: touch
      path: /opt/cruise-control/capacity.json

  - name: Compile dependant libs
    shell: |
      cd /opt/cruise-control && ./gradlew jar copyDependantLibs

  - name: Create Service for cruise-control to /etc/systemd/system/cruise-control.service
    template:
      src: templates/cruise-control.service
      dest: /etc/systemd/system/cruise-control.service

  - name: Create file kafka.service
    template:
      src: templates/kafka.j2
      dest: /etc/systemd/system/kafka.service      
      mode: 0755


  - name: "Create data folder for Jolokia {{ kafka_jolokia_folder }}"
    file:
      path: "{{ kafka_jolokia_folder }}"
      state: directory
      mode: 0755
      group: "{{ kafka_user }}"
      owner: "{{ kafka_user }}"

  - name: "Install Jolokia jar file to {{ kafka_jolokia_folder }}"
    shell: |
      cd /opt/jolokia
      wget https://search.maven.org/remotecontent?filepath=org/jolokia/jolokia-jvm/1.6.2/jolokia-jvm-1.6.2-agent.jar -O jolokia-agent.jar


  - name: "Set data folder for prometheus {{ kafka_prometheus_folder }}"
    file:
      path: "{{ kafka_prometheus_folder }}"
      state: directory
      mode: 0755
      group: "{{ kafka_user }}"
      owner: "{{ kafka_user }}"

  - name: "Install jmx exporter {{ kafka_prometheus_folder }}"
    get_url:
      url="https://repo1.maven.org/maven2/io/prometheus/jmx/jmx_prometheus_javaagent/0.16.0/jmx_prometheus_javaagent-0.16.0.jar"
      dest="{{ kafka_prometheus_folder }}/jmx_prometheus_javaagent-0.16.0.jar"

  - name: "Create data folder for node exporter to {{ kafka_node_exporter }}"
    file:
      path: "{{ kafka_node_exporter }}"
      state: directory
      mode: 0755
      group: "{{ kafka_user }}"
      owner: "{{ kafka_user }}"

  - name: "Install node_exporter to kafka brokers"
    get_url:
      url="https://github.com/prometheus/node_exporter/releases/download/v1.1.2/node_exporter-1.1.2.linux-amd64.tar.gz"
      dest={{ kafka_node_exporter }}

  - name: "Unzip node_exporter-1.1.2.linux-amd64.tar.gz to {{ kafka_node_exporter }}"
    unarchive:
      src: "{{ kafka_node_exporter }}/node_exporter-1.1.2.linux-amd64.tar.gz"
      dest: "{{ kafka_node_exporter }}"
      remote_src: yes
      list_files: yes


  - name: "Remove package node_exporter-1.1.2.linux-amd64.tar.gz from {{ kafka_node_exporter }}"
    file:
      path: "{{ kafka_node_exporter }}/node_exporter-1.1.2.linux-amd64.tar.gz"
      state: absent
  - name: " Move node_exporter-1.1.2.linux-amd64 content to /opt/node_exporter directory"
    shell: |
      cd /opt/node_exporter && mv node_exporter-1.1.2.linux-amd64/* /opt/node_exporter
      rm -r /opt/node_exporter/node_exporter-1.1.2.linux-amd64

  - name: "Install config to {{ kafka_prometheus_folder }}"
    shell: |
      cd /opt/prometheus && wget https://raw.githubusercontent.com/prometheus/jmx_exporter/master/example_configs/kafka-2_0_0.yml
  
  - name: Rename kafka-2_0_0.yml to kafka-2.yml
    shell: |
      cd /opt/prometheus && touch kafka-2.yml
      cd /opt/prometheus && mv kafka-2_0_0.yml kafka-2.yml    

  - name: Create node_exporter.service
    template:
      src: templates/kafka_node_exporter.j2
      dest: /etc/systemd/system/node_exporter.service
      mode: 0755
 

  - name: set kafka:kafka as owner to /opt/*
    shell: |
      chown -R kafka:kafka /opt/*

  - name: Force systemd to reread configs (2.4 and above)
    systemd:
      daemon_reload: yes

  - name: enable node_exporter.service and ensure it is not masked
    systemd:
      name: node_exporter.service
      enabled: yes
      masked: no

  - name: Enable service kafka.service and ensure it is not masked
    systemd:
      name: kafka.service
      enabled: yes
      masked: no        

  - name: Start kafka
    service:
      name: kafka.service
      state: restarted

  - name: Start node_exporter
    service:
      name: node_exporter.service
      state: restarted

